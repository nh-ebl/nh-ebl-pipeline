% MATLAB script to select images with minimal exposure time of 10s
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Comments added by C.Nguyen
% Revision 11/04/15: comments added, file paths updated
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PARAMETERS


function selection(phase,path)


% load matrix of exposure time generated by cruise_duration.m
load(sprintf('%smatrix/NH_%s_time.mat',path, phase)); 

date_array_mat_no_string=[];
date_array_mat=[];
% loop over the matrix

for iter=1:numel(duration_array)
    
    if duration_array(iter)> 5 % pick out images with >1s of exposure (changed to 5 sec at some point?)
    %if duration_array(iter) > 0.5 & duration_array(iter) < 10 %for launch data only
        file=file_array(iter).name;
        date=date_array(iter).name;
        
        filename = sprintf('%s%s/data/%s/%s',path,phase,date,file);
        date_array_element = sprintf('%s',date);
        date_array_mat_no_string = [date_array_mat_no_string; date_array_element];
        
        data=fitsread(filename);
           
        %figure(1);
        %clf; % clear fig window, so that the window will close after each image is saved
%         imagesc(data);
%         colormap(flipud(gray));
%         colorbar; % display the colorbar on the images
%         caxis([-5,50]);
%         caxis manual; % freeze the colorbar to ensure all images use the same scale
        
      %  add title to the images, which include the date the images were taken
%         title(sprintf('%s',date))
      % save as .png files
%         imagename = sprintf('../../data/NH/%s/eps_images/img_launch_%s_%s',phase,date,file)
%         print(imagename, '-deps')
       % imagename = sprintf('../../data/NH/%s/eps_images/img_launch_%s_%s',phase,date,file)
       % print(imagename,'-dpng')
      
        
        % copy the selected .fit into a separate folder
        
        destination = sprintf('%s%s/selected_data',path,phase);
        copyfile(filename,destination);
        oldfile = sprintf('%s%s/selected_data/%s',path, phase,file);
        newfile = sprintf('%s%s/selected_data/%s_%s',path, phase,date, file);
        movefile(oldfile, newfile);
        
        pause(1);
    end
end

date_array_mat=cellstr(date_array_mat_no_string);
save(sprintf('%smatrix/%s_time_selected.mat',path,phase), 'date_array_mat');

return

